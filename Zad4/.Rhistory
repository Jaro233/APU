read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/lodowki.csv")
load("C:/Users/jaro9/OneDrive/Desktop/apu/sprawko1/lodowki.csv")
#Wariant 5
install.packages("neuralnet")
library(neuralnet)
#x ∈ [1; 10]
input <-  as.data.frame(runif(1000, min=1, max=10))
#f(x) = x^2 + e^−x
output <- input^2 + exp(1)^(-input)
#Po laaczenie danych wejsciowych i wyjsciowych
trainingdata <- cbind(input,output)
colnames(trainingdata) <- c("Wejscie","Wyjscie")
#Trenowanie sieci neuronowej
net.sqrt <- neuralnet(Wyjscie~Wejscie,trainingdata, hidden=7, threshold=0.01, stepmax=1e7)
print(net.sqrt)
plot(net.sqrt, rep = "best")
#Prognozowanie z pomoca˛ sieci neuronowej
testdata <- as.data.frame(runif(300, min=1, max=10))
net.results <- compute(net.sqrt, testdata)
print(net.results$net.result)
cleanoutput <- cbind(testdata,log(testdata^2), as.data.frame(net.results$net.result))
colnames(cleanoutput) <- c("Wejscie","Oczekiwane Wyjscie","Wyjscie sieci neuronowej")
print(cleanoutput)
install.packages("neuralnet")
install.packages("neuralnet")
library(neuralnet)
#x ∈ [1; 10]
input <-  as.data.frame(runif(100, min=1, max=10))
#f(x) = x^2 + e^−x
output <- input^2 + exp(1)^(-input)
#Po laaczenie danych wejsciowych i wyjsciowych
trainingdata <- cbind(input,output)
colnames(trainingdata) <- c("Wejscie","Wyjscie")
#Trenowanie sieci neuronowej
net.sqrt <- neuralnet(Wyjscie~Wejscie,trainingdata, hidden=7, threshold=0.01, stepmax=1e7)
print(net.sqrt)
plot(net.sqrt, rep = "best")
#Prognozowanie z pomoca˛ sieci neuronowej
testdata <- as.data.frame(runif(300, min=1, max=10))
net.results <- compute(net.sqrt, testdata)
print(net.results$net.result)
cleanoutput <- cbind(testdata,log(testdata^2), as.data.frame(net.results$net.result))
colnames(cleanoutput) <- c("Wejscie","Oczekiwane Wyjscie","Wyjscie sieci neuronowej")
print(cleanoutput)
#Wariant 5
df <- read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/zad3/lodowki.csv")
pojemność <- df[["pojemność"]]
cena <- df[["cena"]]
compare.trainingdata <- cbind(pojemnosc, cena)
scale.pojemnosc <- as.data.frame(scale(pojemnosc))
#Wariant 5
df <- read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/zad3/lodowki.csv")
pojemność <- df[["pojemność"]]
cena <- df[["cena"]]
compare.trainingdata <- cbind(pojemnosc, cena)
#Wariant 5
df <- read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/zad3/lodowki.csv")
pojemność <- df[["pojemność"]]
cena <- df[["cena"]]
compare.trainingdata <- cbind(pojemnosc, cena)
View(df)
compare.trainingdata <- cbind(pojemnosc, cena)
#Wariant 5
df <- read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/zad3/lodowki.csv")
pojemnosc <- df[["pojemnosc"]]
cena <- df[["cena"]]
compare.trainingdata <- cbind(pojemnosc, cena)
scaled.pojemnosc <- as.data.frame(scale(pojemnosc))
trainingdata <- cbind(scaled.pojemnosc, cena)
colnames(trainingdata) <- c("Pojemnosc", "Cena")
#(error ≤ 100 z l)
net.price <- neuralnet(Cena~Pojemnosc,trainingdata, hidden<-c(7,1), threshold<-100, lifesign <- "full")
plot(net.price)
testdata <- data.frame(c(20,130))
scaled.testdata <- as.data.frame(scale(testdata))
net.results <- compute(net.price, scaled.testdata)
fixed_cena <- cbind(testdata, as.data.frame(net.results$net.result))
colnames(fixed_cena) <- c("Pojemnosc", "Cena")
print(fixed_cena)
df <- read.csv("C:/Users/jaro9/OneDrive/Desktop/apu/zad3/lodowki.csv")
pojemnosc <- df[["pojemnosc"]]
cena <- df[["cena"]]
compare.trainingdata <- cbind(pojemnosc, cena)
scaled.pojemnosc <- as.data.frame(scale(pojemnosc))
trainingdata <- cbind(scaled.pojemnosc, cena)
colnames(trainingdata) <- c("Pojemnosc", "Cena")
#(error ≤ 100 z l)
net.price <- neuralnet(Cena~Pojemnosc,trainingdata, hidden<-c(7,1), threshold<-100, lifesign <- "full")
plot(net.price)
testdata <- data.frame(c(20,130))
scaled.testdata <- as.data.frame(scale(testdata))
net.results <- compute(net.price, scaled.testdata)
fixed_cena <- cbind(testdata, as.data.frame(net.results$net.result))
colnames(fixed_cena) <- c("Pojemnosc", "Cena")
print(fixed_cena)
library("C50")
setwd("C:/Users/jaro9/OneDrive/Desktop/apu/Zad4")
dane <- read.csv('lodowki.csv')
dane$ocena_klientow <- factor(dane$ocena_klientow)
head(dane)
treeModel <- C5.0(x=dane[,-5], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
View(dane)
treeModel <- C5.0(x=dane[,-7], y=dane$ocena_klientow)
treeModel <- C5.0(x=dane[,-6], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
treeModel <- C5.0(x=dane[,-7], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
treeModel <- C5.0(x=dane[,-6], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
library(MASS)
setwd("C:/Users/jaro9/OneDrive/Desktop/apu/Zad4")
file_data <- read.csv('lodowki.csv')
train_data_precent <- 0.7
ind <- createDataPartition(file_data, p = train_data_precent, list = F)
library(MASS)
ind <- createDataPartition(file_data, p = train_data_precent, list = F)
library(MASS)
#split database for train i test
library(caret)
ind <- createDataPartition(file_data, p = train_data_precent, list = F)
train_data <- dataset[ind,]
train_data <- file_data[ind,]
test_data<- file_data[-ind,]
library(C50)
oneTree <- C5.0(formula = Ocena ~ ., data = train_data)
oneTree <- C5.0(formula = ocena_klientow ~ ., data = train_data)
ocena_klientow <- factor(dane$Ocena)
ocena_klientow <- factor(file_data$ocena_klientow)
oneTree <- C5.0(formula = ocena_klientow ~ ., data = train_data)
summary(oneTree)
u
oneTree <- C5.0(formula = ocena_klientow, data = train_data)
setwd('C:/Users/jaro9/OneDrive/Desktop/apu/Zad4')
library(MASS)
install.packages('caret')
library(caret)
install.packages('libcoin', dependencies = T)
install.packages("libcoin", dependencies = T)
install.packages('C50', dependencies = T)
library(C50)
lodowki <- read.csv("lodowki.csv", sep = ';')
head(lodowki)
smartphones_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,5]))
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,5]))
lodowki_tree <- C5.0(x=lodowki[,-5], y=as.factor(lodowki[,5]))
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,-5]))
head(lodowki)
lodowki_tree <- C5.0(lodowki[,-6], as.factor(lodowki[,6]))
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,5]))
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$nazwa.pojemnosc.waga.cena.liczba_opinii.ocena_klientow.status_opinii))
lodowki <- read.csv("lodowki.csv")
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree_rules <- C5.0(lodowki[,-5], as.factor(lodowki[,5]), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree <- C5.0(lodowki[,-6], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree_rules <- C5.0(lodowki[,-6], as.factor(lodowki[,6]), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree_rules <- C5.0(lodowki[,-6], as.factor(lodowki[,6]), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree_rules <- C5.0(lodowki[,-5], as.factor(lodowki[,5]), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$nazwa))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
View(lodowki)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree_rules <- C5.0(lodowki[,-5], as.factor(lodowki[,5]), rules = TRUE)
summary(lodowki_tree_rules)
plot(lodowki_tree_rules)
lodowki_tree_rules <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree_rules <- C5.0(lodowki[,-6], as.factor(lodowki$ocena_klientow), rules = TRUE)
summary(lodowki_tree_rules)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,6]))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree <- C5.0(lodowki[,-6], as.factor(lodowki[,6]))
summary(lodowki_tree)
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki[,5]))
summary(lodowki_tree)
plot(lodowki_tree, main = 'Drzewo wyboru')
lodowki_tree <- C5.0(lodowki[,5], as.factor(lodowki$ocena_klientow))
lodowki_tree <- C5.0(lodowki[,-5], as.factor(lodowki$ocena_klientow))
summary(lodowki_tree)
dane <- read.csv('lodowki.csv')
dane$ocena_klientow <- factor(dane$ocena_klientow)
head(dane)
treeModel <- C5.0(x=dane[,-5], y=dane[,5])
treeModel <- C5.0(x=dane[,-5], y=factor(dane[,5]))
treeModel
summary(treeModel)
plot(treeModel)
dane$ocena_klientow <- factor(dane$ocena_klientow)
head(dane)
treeModel <- C5.0(x=dane[,-5], y=dane$ocena_klientow)
treeModel
summary(treeModel)
treeModel <- C5.0(x=dane[,-6], y=dane$ocena_klientow)
treeModel
summary(treeModel)
treeModel <- C5.0(x=dane[,-6], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
View(treeModel)
treeModel <- C5.0(x=dane[1,-6], y=dane$ocena_klientow)
treeModel <- C5.0(x=dane[-1,-6], y=dane$ocena_klientow)
treeModel <- C5.0(x=dane[,-6], y=dane$ocena_klientow)
treeModel <- C5.0(x=dane[,-1], y=dane$ocena_klientow)
treeModel
summary(treeModel)
View(treeModel)
treeModel <- C5.0(x=dane[,[2:]], y=dane$ocena_klientow)
treeModel <- C5.0(x=dane[,2:6], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
View(treeModel)
treeModel <- C5.0(x=dane[,2:5], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
View(lodowki)
View(treeModel)
library("C50")
setwd("C:/Users/jaro9/OneDrive/Desktop/apu/Zad4")
dane <- read.csv('lodowki.csv')
dane$ocena_klientow <- factor(dane$ocena_klientow)
head(dane)
treeModel <- C5.0(x=dane[,2:5], y=dane$ocena_klientow)
treeModel
summary(treeModel)
plot(treeModel)
